@model SalesApp.Models.OrderDTO

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<form asp-controller="Order" asp-action="Create">
    <div>
        <label>Customer Name</label>
        <input asp-for="CustomerName" class="form-control" />
        @Html.ValidationMessageFor(m => m.CustomerName, "", new { @class = "text-danger" })
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.Label("Product Name")
                </th>
                <th>
                    @Html.Label("Quantity")
                </th>
                <th>
                    @Html.Label("Price")
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.OrderItems)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                </tr>
            }

        </tbody>

    </table>
    <div class="row">
        <div class="totals">

            <p>Total price INC Vat: <bold>@Html.DisplayFor(x=>x.TotalPrice) .00</bold></p>
            <p>
                Vat: <bold> @Html.DisplayFor(x=>x.Vat) .00</bold>
            </p>
        </div>
    </div>

    @for (int i = 0; i < Model.OrderItems.Count; ++i)
    {
        @Html.HiddenFor(x => x.OrderItems[i].ProductId)
        ;
        @Html.HiddenFor(x => x.OrderItems[i].ProductName)
        ;
        @Html.HiddenFor(x => x.OrderItems[i].Price)
        ;
        @Html.HiddenFor(x => x.OrderItems[i].Quantity)
    }

    @Html.HiddenFor(x=>x.UserId)
    @Html.HiddenFor(x=>x.TotalPrice)
    @Html.HiddenFor(x=>x.Vat)

    <input type="submit" value="Checkout" class="btn btn-success" />
</form>

